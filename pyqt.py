import sys
import airsim
from PyQt5.QtWidgets import (
    QApplication, QWidget, QLabel, QVBoxLayout, QHBoxLayout, QGridLayout, QGroupBox
)
from PyQt5 import QtWidgets, uic
from PyQt5.QtCore import QTimer, QDateTime


class DroneUI(QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()
        uic.loadUi("interface.ui", self)  # –ó–∞–≥—Ä—É–∂–∞–µ–º UI –∏–∑ —Ñ–∞–π–ª–∞


class DroneInterface(QWidget):
    def __init__(self):
        super().__init__()
        self.setStyleSheet("background-color: lightgray;")
        self.setWindowTitle("–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ë–ü–õ–ê")
        self.setGeometry(100, 100, 900, 600)

        layout = QVBoxLayout()

        layout.addWidget(self.create_navigation_block())
        layout.addWidget(self.create_power_block())
        layout.addWidget(self.create_propeller_block())

        self.setLayout(layout)

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ AirSim
        self.client = airsim.MultirotorClient()
        self.client.confirmConnection()

        # –¢–∞–π–º–µ—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ AirSim
        self.timer = QTimer()
        self.timer.timeout.connect(self.update_data)
        self.timer.start(1000)  # –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É

    def create_navigation_block(self):
        group = QGroupBox("üìç –ù–∞–≤–∏–≥–∞—Ü–∏—è –∏ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è")
        layout = QGridLayout()

        self.label_compass = QLabel("–ö–æ–º–ø–∞—Å: ---")
        self.label_coords = QLabel("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ---")
        self.label_altitude = QLabel("–í—ã—Å–æ—Ç–∞ –Ω–∞–¥ —É—Ä–æ–≤–Ω–µ–º –º–æ—Ä—è: ---")
        self.label_tilt = QLabel("–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç –æ—Å–∏: ---")

        layout.addWidget(self.label_compass, 0, 0)
        layout.addWidget(self.label_coords, 0, 1)
        layout.addWidget(self.label_altitude, 1, 0)
        layout.addWidget(self.label_tilt, 1, 1)

        group.setLayout(layout)
        return group

    def create_power_block(self):
        group = QGroupBox("üîã –ü–∏—Ç–∞–Ω–∏–µ –∏ —Å–≤—è–∑—å")
        layout = QGridLayout()

        self.label_voltage = QLabel("–í–æ–ª—å—Ç–∞–∂: --- –í")
        self.label_battery = QLabel("–ó–∞—Ä—è–¥ –±–∞—Ç–∞—Ä–µ–∏: --- %")
        self.label_signal = QLabel("–£—Ä–æ–≤–µ–Ω—å —Å–≤—è–∑–∏: --- %")
        self.label_datetime = QLabel("–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: ---")
        self.label_speed = QLabel ("–°–∫–æ—Ä–æ—Å—Ç—å –∫–æ–ø—Ç–µ—Ä–∞: ---")

        layout.addWidget(self.label_voltage, 0, 0)
        layout.addWidget(self.label_battery, 0, 1)
        layout.addWidget(self.label_signal, 1, 0)
        layout.addWidget(self.label_datetime, 1, 1)
        layout.addWidget(self.label_speed, 2, 0)

        group.setLayout(layout)
        return group

    def create_propeller_block(self):
        group = QGroupBox("‚öôÔ∏è –û–±–æ—Ä–æ—Ç—ã –ø—Ä–æ–ø–µ–ª–ª–µ—Ä–æ–≤")
        layout = QHBoxLayout()

        self.prop1 = QLabel("–ü—Ä–æ–ø–µ–ª–ª–µ—Ä 1: --- –æ–±/–º–∏–Ω")
        self.prop2 = QLabel("–ü—Ä–æ–ø–µ–ª–ª–µ—Ä 2: --- –æ–±/–º–∏–Ω")
        self.prop3 = QLabel("–ü—Ä–æ–ø–µ–ª–ª–µ—Ä 3: --- –æ–±/–º–∏–Ω")
        self.prop4 = QLabel("–ü—Ä–æ–ø–µ–ª–ª–µ—Ä 4: --- –æ–±/–º–∏–Ω")

        layout.addWidget(self.prop1)
        layout.addWidget(self.prop2)
        layout.addWidget(self.prop3)
        layout.addWidget(self.prop4)

        group.setLayout(layout)
        return group

    def update_data(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ AirSim –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        try:
            state = self.client.getMultirotorState()
            pos = state.kinematics_estimated.position
            orient = state.kinematics_estimated.orientation
            vel = state.kinematics_estimated.linear_velocity

            # –í—ã–≤–æ–¥ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
            print(f"\n[AirSim] –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã:")
            print(f"–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: X={pos.x_val:.2f}, Y={pos.y_val:.2f}, Z={pos.z_val:.2f}")
            print(f"–û—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è: Pitch={orient.x_val:.2f}, Roll={orient.y_val:.2f}, Yaw={orient.z_val:.2f}")
            print(f"–°–∫–æ—Ä–æ—Å—Ç—å: {vel.x_val:.2f} –º/—Å")

            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
            self.label_coords.setText(f"–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: X={pos.x_val:.2f}, Y={pos.y_val:.2f}, Z={pos.z_val:.2f}")
            self.label_altitude.setText(f"–í—ã—Å–æ—Ç–∞: {pos.z_val:.2f} –º")
            self.label_tilt.setText(f"–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ: Pitch={orient.x_val:.2f}, Roll={orient.y_val:.2f}, Yaw={orient.z_val:.2f}")
            self.label_compass.setText(f"–ö–æ–º–ø–∞—Å (Yaw): {orient.z_val:.2f}¬∞")
            self.label_speed.setText(f"–°–∫–æ—Ä–æ—Å—Ç—å: {vel.x_val:.2f} –º/—Å")

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ AirSim: {e}")
        
        def update_time(self):
            now = QDateTime.currentDateTime()
            self.label_datetime.setText("–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: " + now.toString("dd.MM.yyyy hh:mm:ss"))


if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = DroneInterface()
    window.show()
    sys.exit(app.exec_())